// npm install --save express


   var express = require(‘express’);
   var app = express();
   
   
// Routing Example 



   var filmsRoute = require('./routes/FilmRoute');
   app.use('/films', filmsRoute);
   
   
   
class FilmRoute
{
    constructor() {
        this._filmRepository = require("../repository/FilmRepository");
        this._router = require('express').Router();
        this.registerPaths();
    }
    
    registerPaths() {
        var self = this;
        this._router.get("/list", function(req, res, next) {
            self.getFilms(req,res,next);
        });
    }
    
    getFilms(req, res, next) {
        this._filmRepository.getFilms(function(films) {
            res.render("films", {
                films : films
            });
        });
    }
}

var filmsRoute = new FilmsRoute();
module.exports = filmsRoute.router;

// 

app.use("/static", express.static(path.join(__dirname, '/static')));




// npm install --save express-handlebars

 
   var exphbs  = require('express-handlebars');
   var hbs = exphbs.create({defaultLayout: 'main'});
   app.engine('handlebars', hbs.engine);
   app.set('view engine', 'handlebars');
   
// SQLite3

npm install --save sqlite3



npm install --save sequelize




   var Sequelize = require('sequelize');
   var sequelize = new Sequelize('', '', '', {
       dialect: 'sqlite',
       pool: {
           max: 5,
           min: 0,
           idle: 10000
       },
       storage: '../database/films.db'
   });
   
   
   
module.exports = function(sequelize, DataTypes) {
 return sequelize.define('film', {
  filmId : {
   type : DataTypes.INTEGER,
   primaryKey : true,
   field : 'film_id',
  },
  title : {
   type : DataTypes.STRING,
   field : 'title'
  },
  rentalRate : {
   type : DataTypes.REAL,
   field : 'rental_rate'
  }
 }, {
  timestamps : false,
  freezeTableName : false,
  tableName : 'film'
 });
}

sequelize.import("./models/film.js");


   sequelize.sync().then(function(result) {
        global.sequelize = sequelize;
        initWebapp(); // this is where we initialise express engine
   }, function(err) {
       console.log('An error occurred when initialising the films database’, err);
   });
   
   
   global.sequelize = sequelize;
   
   
  
   "use strict"

   class FilmRepository {
       constructor() {
           this._sequelize = global.sequelize;
       }
       
       getFilms(callback) {
           this._sequelize.models['film'].all({limit:10}).then(callback);
       }
   }

   module.exports = new FilmRepository();
   
   
   app.listen(3000);
   
   
   http://nodejscode.blogspot.com/2016/01/nodejs-web-application-using-express.html?m=1
   
   


   